{"mappings":"AAAA,MAAMA,EAAM,yDAENC,EAAWC,IACfC,QAAQC,IAAI,QAYLC,MAAMC,KAAKN,EAAKE,IA0BnBK,EAAcC,IAClBL,QAAQC,IAAI,mBAAmBI,KAQxBH,MAAMI,OAAO,GAAGT,KAAOQ,MChD1BE,EAAUC,SAASC,eAAe,WAER,IAA5BC,EAAY,EAiBhB,SAASC,EAASC,EAAMC,GAAS,EAAOR,EAAKK,GAC3C,MAAMI,EAAON,SAASO,cAAc,MAG9BC,EAASR,SAASS,eAAeL,GACvCE,EAAKI,YAAYF,GAKIF,EAAhBK,QAAQd,GAAKA,EAGdQ,IACFC,EAAKM,UAAY,WAGnBC,KAAKH,YAAYJ,GAKG,SAADQ,GACnB,MAAMC,EAAOf,SAASO,cAAc,QAC9BS,EAAMhB,SAASS,eAAe,KACpCM,EAAKH,UAAY,QACjBG,EAAKL,YAAYM,GACjBF,EAAGJ,YAAYK,E,CATfE,CAAYX,E,CCjCd,MAAMY,EAAOlB,SAASC,eAAe,QACtBD,SAASC,eAAe,UAEhCkB,iBAAiB,SDHxB,WACE,MAAMC,EAAarB,EAAQsB,MAAMC,OACd,KAAfF,GAIJjB,EAASiB,GAGsBrB,EAAvBsB,MAAQ,GAsDc,SAAXjB,EAAMC,GAAS,GAClC,MAAMkB,EAJiB,EAACnB,EAAMC,KAAY,C,KAAED,E,OAAMC,IAIlCmB,CAAiBpB,EAAMC,GACvCf,EAASiC,GAETrB,GAAa,C,CAvD0BuB,CAA3BL,IATVM,MAAM,4B,ICGcR,EAAnBC,iBAAiB,SDwCO,UAAAQ,OAAEA,ID3BX,IAAC9B,EAAI+B,EC4BA,OAAnBD,EAAOE,SACTF,EAAOG,UAAUC,OAAO,WD7BPlC,EC+BL8B,EAAOhB,QAAQd,GD/BN+B,EC+BUD,EAAOG,UAAUE,SAAS,WD9B3DxC,QAAQC,IAAI,gBAAgBI,iBAAkB+B,KAYvClC,MAAMuC,IAAI,GAAG5C,KAAOQ,IAAM,CAAEQ,OAAQuB,KCqBhCD,EAAOG,UAAUE,SAAS,WACnCL,EAAOO,WAAWC,SAClBvC,EAAY+B,EAAOO,WAAWvB,QAAQd,I,IC9C1CuC,OAAOjB,iBAAiB,oBD8DxB,YD1DE3B,QAAQC,IAAI,OAGLC,MAAM2C,IAAIhD,GAAKiD,MAAKC,GAAOA,EAAIC,QCyDnCF,MAAKG,IACJA,EAAMC,SAAQ,EAACtC,KAAEA,EAAIC,OAAEA,EAAMR,GAAEA,KAASM,EAASC,EAAMC,EAAQR,KAC/DL,QAAQC,IAAIgD,GACLA,KAERH,MAAKG,IACJvC,EACmB,IAAjBuC,EAAME,OAAe,EAAIC,OAAOH,EAAMA,EAAME,OAAS,GAAG9C,IAAM,CAAC,G","sources":["src/js/api.js","src/js/functions-todo.js","src/js/to-do.js"],"sourcesContent":["const URL = 'https://6448213150c25337443949ec.mockapi.io/api/todos/';\n\nconst saveTask = task => {\n  console.log('POST');\n  //   const options = {\n  //     method: 'POST',\n  //     body: JSON.stringify(task),\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //   };\n\n  //   return fetch(URL, options);\n\n  // ! Спробуємо через аксіос\n  return axios.post(URL, task);\n};\n\nconst loadTasks = () => {\n  console.log('GET');\n  //   return fetch(URL).then(res => res.json());\n  // ! Спробуємо через аксіос\n  return axios.get(URL).then(res => res.data);\n};\n\nconst updateTasks = (id, status) => {\n  console.log(`PUT: \\n\\tid: ${id} \\n\\tstatus: ${status}`);\n\n  //   const options = {\n  //     method: 'PUT',\n  //     body: JSON.stringify({ isDone: status }),\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //   };\n  //   return fetch(`${URL}/${id}`, options);\n\n  // ! Спробуємо через аксіос\n  return axios.put(`${URL}/${id}`, { isDone: status });\n};\n\nconst deleteTasks = id => {\n  console.log(`DELETE: \\n\\tid: ${id}`);\n\n  //   const options = {\n  //     method: 'DELETE',\n  //   };\n  //   return fetch(`${URL}/${id}`, options);\n\n  // ! Спробуємо через аксіос\n  return axios.delete(`${URL}/${id}`);\n};\n\nexport { saveTask, loadTasks, updateTasks, deleteTasks };\n","import { saveTask, loadTasks, updateTasks, deleteTasks } from './api.js';\n\nconst myInput = document.getElementById('myInput');\n// Константа id яка додається до кожного Лі\nlet currentId = 1;\n\nfunction addNewTask() {\n  const inputValue = myInput.value.trim();\n  if (inputValue === '') {\n    alert('You mast write something!');\n    return;\n  }\n  createLi(inputValue);\n\n  // Після додавання очищаємо поле вводу\n  myInput.value = '';\n\n  // Додаємо функцію яка буде додавати Лі у сторедж\n  addTaskToDB(inputValue);\n}\n\nfunction createLi(text, isDone = false, id = currentId) {\n  const liEl = document.createElement('li');\n\n  // Варіант 1\n  const liText = document.createTextNode(text);\n  liEl.appendChild(liText);\n  // Варіант 2\n  // liEl.textContent = text;\n\n  // Додамо до елементу поле з id\n  liEl.dataset.id = id;\n\n  // Робимо перевірку якщо isDone = true, то запис вже буде додана с класом checked\n  if (isDone) {\n    liEl.className = 'checked';\n  }\n\n  myUL.appendChild(liEl);\n  addCloseBtn(liEl);\n}\n\n// Додаємо функцію крестику\nfunction addCloseBtn(li) {\n  const span = document.createElement('SPAN');\n  const txt = document.createTextNode('\\u00D7');\n  span.className = 'close';\n  span.appendChild(txt);\n  li.appendChild(span);\n}\n\n// При натисканні на Лі додаємо класс\nfunction handleTaskBehaviour({ target }) {\n  if (target.tagName === 'LI') {\n    target.classList.toggle('checked');\n\n    updateTasks(target.dataset.id, target.classList.contains('checked'));\n\n    // Робимо перевірку для відалення елементу\n  } else if (target.classList.contains('close')) {\n    target.parentNode.remove();\n    deleteTasks(target.parentNode.dataset.id);\n  }\n}\n\n// Створює об'єкт нашої задачі в томи вигляді що нам потрібна\nconst createTaskObject = (text, isDone) => ({ text, isDone });\n\n// функція яка буде додавати Лі у сторедж\nfunction addTaskToDB(text, isDone = false) {\n  const newTask = createTaskObject(text, isDone);\n  saveTask(newTask);\n\n  currentId += 1;\n}\n\n// Функція яка буде діставати дані зі стореджа і буде додавати дані у вигляді Лі на сторінку\nfunction fillTasksList() {\n  loadTasks()\n    .then(todos => {\n      todos.forEach(({ text, isDone, id }) => createLi(text, isDone, id));\n      console.log(todos);\n      return todos;\n    })\n    .then(todos => {\n      currentId =\n        todos.length === 0 ? 1 : Number(todos[todos.length - 1].id) + 1;\n    });\n}\n\nexport { addNewTask, handleTaskBehaviour, fillTasksList };\n","import {\n  addNewTask,\n  handleTaskBehaviour,\n  fillTasksList,\n} from './functions-todo.js';\n\nconst myUL = document.getElementById('myUL');\nconst addBtn = document.getElementById('addBtn');\n\naddBtn.addEventListener('click', addNewTask);\n\n// Додаємо при натисканні клас\nmyUL.addEventListener('click', handleTaskBehaviour);\n\n// Подія яка спрацьовує при побудові DOM дерева і ми длдаємо функцію яка буде зберігати всі данні при перезавантаженні сторінки\nwindow.addEventListener('DOMContentLoaded', fillTasksList);\n"],"names":["$56ca17bb174b0ce3$var$URL","$56ca17bb174b0ce3$export$2889637ef1bcfccc","task","console","log","axios","post","$56ca17bb174b0ce3$export$5ff5dd33cfff42ff","id","delete","$31b2b75d48ff5118$var$myInput","document","getElementById","$31b2b75d48ff5118$var$currentId","$31b2b75d48ff5118$var$createLi","text","isDone","liEl","createElement","liText","createTextNode","appendChild","dataset","className","myUL","li","span","txt","$31b2b75d48ff5118$var$addCloseBtn","$8214eb1e022c3558$var$myUL","addEventListener","inputValue","value","trim","newTask","$31b2b75d48ff5118$var$createTaskObject","$31b2b75d48ff5118$var$addTaskToDB","alert","target","status","tagName","classList","toggle","contains","put","parentNode","remove","window","get","then","res","data","todos","forEach","length","Number"],"version":3,"file":"to-do.de9a5006.js.map"}